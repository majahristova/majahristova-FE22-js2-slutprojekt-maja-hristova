{"mappings":"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","sources":["src/modules/userpage.ts"],"sourcesContent":["// import index from './index.htlm'\r\n\r\nconst newPostBtn = document.querySelector<HTMLButtonElement>('#postMessageButton');\r\nconst welcomeMessage = document.querySelector<HTMLHeadingElement>('h1');\r\nconst newpostInput = document.querySelector<HTMLInputElement>('#messageInputBox');\r\nconst deleteAccountBtn = document.querySelector<HTMLButtonElement>('#deleteAcc');\r\nconst currentUser = JSON.parse(localStorage.getItem('currentUser')!) as {id: string, username: string, img: string, posts?: string[]};\r\n\r\nconst url = ` https://socialmedia-588f1-default-rtdb.europe-west1.firebasedatabase.app/`;\r\nconst newUrl = `${url}userdata/${currentUser.id}.json`;\r\nconst baseurl = `${url}userdata.json`;\r\n\r\n//Displays userinformation through localstorage\r\nfunction userpageShowPersonalInfo(currentUser: {username: string, img: string}) {\r\n  welcomeMessage.innerText = `Welcome ${currentUser.username}`;\r\n\r\n  const profileImage = document.createElement('img');\r\n  document.body.appendChild(profileImage)\r\n  profileImage.src = currentUser.img;\r\n}\r\nuserpageShowPersonalInfo(currentUser);\r\n\r\n//Displalys automatic the post that has been created before\r\nasync function fetchData() {\r\n  const response = await fetch(newUrl);\r\n  const data = await response.json() as {posts?: string[]};\r\n  if (data) {\r\n    displaymessage(data);\r\n  }\r\n}\r\nfetchData();\r\n\r\n//Posts new messages\r\nnewPostBtn.addEventListener('click', updateCurrentUser);\r\nasync function updateCurrentUser(event: MouseEvent){\r\n  event.preventDefault();\r\n  const writemessage = newpostInput.value;\r\n  console.log(writemessage);\r\n\r\n  const response = await fetch(newUrl);\r\n  const userData = await response.json() as {posts?: string[]};\r\n\r\n  // Add the new post to the `posts` array in the user data\r\n  if (userData.posts) {\r\n    userData.posts.push(writemessage);\r\n  } else {\r\n    userData.posts = [writemessage];\r\n  }\r\n  const init = {\r\n    method: 'PATCH',\r\n    body: JSON.stringify(userData),\r\n    headers: {\r\n        'Content-type': 'application/json; charset=UTF-8'\r\n    }\r\n  };\r\n  const responePost = await fetch(newUrl, init);\r\n  const dataFromPost = await responePost.json() as {posts?: string[]};\r\n  console.log(dataFromPost);\r\n  displaymessage(dataFromPost);\r\n}\r\n\r\n\r\n//Displaying the posts\r\nfunction displaymessage(userData: {posts?: string[]}) {\r\n  const posts = userData.posts ?? [];\r\n  const container = document.getElementById('post-container'); // replace with your container element ID\r\n  container!.innerHTML = ''; // clear existing posts from container\r\n  for (let i = 0; i < posts.length; i++) {\r\n    const textbubble = document.createElement('h4');\r\n    container!.appendChild(textbubble);\r\n    textbubble.innerText = posts[i];\r\n  }\r\n}\r\n\r\n//Deleting the account\r\ndeleteAccountBtn.addEventListener('click',()=>{\r\n  let init = {\r\n    method : 'DELETE'\r\n  };\r\n\r\n  fetch(newUrl,init)\r\n  .then(response => console.log(response.status))\r\n  .then (setTimeout(() => {\r\n   alert('Hope to see you here soon again')\r\n   localStorage.clear();\r\n   window.location.assign('index.html');\r\n  }, 5000));\r\n});\r\n\r\n//Able to see other people post \r\nasync function fetchingAlldata(){\r\n  const response = await fetch(baseurl);\r\n  const showDataFromProfile = await response.json() as Record<string, {username: string, img: string, posts?: string[]}>;\r\n  showOtherProfiles(showDataFromProfile);\r\n  console.log(showDataFromProfile);\r\n}\r\nfetchingAlldata();\r\n\r\n\r\nfunction showOtherProfiles(showDataFromProfile: any) {\r\n  const objectFromUsernameData = Object.values(showDataFromProfile);\r\n\r\n  for (let i = 0; i < objectFromUsernameData.length; i++) {\r\n    const usernameProfile = document.createElement('p');\r\n    document.body.appendChild(usernameProfile);\r\n    usernameProfile.innerText = objectFromUsernameData[i].username;\r\n\r\n    usernameProfile.addEventListener('click', () => {\r\n      const modal = document.getElementById('myModal')!;\r\n      const modalContainer = document.getElementById('modal-container')!;\r\n\r\n      // Clear existing content from modal\r\n      modalContainer.innerHTML = '';\r\n\r\n      // Add username to modal\r\n      const usernameElement = document.createElement('h3');\r\n      usernameElement.innerText = 'User ' + objectFromUsernameData[i].username;\r\n      modalContainer.appendChild(usernameElement);\r\n      \r\n      const usernameElementProfilepic = document.createElement('img');\r\n      modalContainer.appendChild(usernameElementProfilepic)\r\n      usernameElementProfilepic.src = objectFromUsernameData[i].img\r\n      \r\n      // Get the latest post (the last element in the posts array)\r\n      const latestPost = objectFromUsernameData[i].posts[objectFromUsernameData[i].posts.length - 1];\r\n\r\n      // Add latest post to modal\r\n      const postElement = document.createElement('h4');\r\n      postElement.innerText =  \"Latest post =  \" + latestPost;\r\n      modalContainer.appendChild(postElement);\r\n\r\n      // Open the modal\r\n      modal.style.display = \"block\";\r\n    });\r\n  }\r\n\r\n  // Close the modal when the user clicks on the close button\r\n  const closeButton = document.getElementsByClassName(\"close\")[0] as HTMLSpanElement;\r\n  closeButton.onclick = function() {\r\n    const modal = document.getElementById('myModal')!;\r\n    modal.style.display = \"none\";\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["$3f40d1da6813c1b2$var$newPostBtn","document","querySelector","$3f40d1da6813c1b2$var$welcomeMessage","$3f40d1da6813c1b2$var$newpostInput","$3f40d1da6813c1b2$var$deleteAccountBtn","$3f40d1da6813c1b2$var$currentUser","JSON","parse","localStorage","getItem","$3f40d1da6813c1b2$var$url","$3f40d1da6813c1b2$var$newUrl","id","$3f40d1da6813c1b2$var$baseurl","$3f40d1da6813c1b2$var$displaymessage","userData","posts","container","getElementById","innerHTML","i","length","textbubble","createElement","appendChild","innerText","currentUser","username","profileImage","body","src","img","$3f40d1da6813c1b2$var$userpageShowPersonalInfo","async","response","fetch","data","json","$3f40d1da6813c1b2$var$fetchData","addEventListener","event","preventDefault","writemessage","value","console","log","push","init","method","stringify","headers","responePost","dataFromPost","then","status","setTimeout","alert","clear","window","location","assign","showDataFromProfile","objectFromUsernameData","Object","values","usernameProfile","modal","modalContainer","usernameElement","usernameElementProfilepic","latestPost","postElement","style","display","getElementsByClassName","onclick","$3f40d1da6813c1b2$var$showOtherProfiles","$3f40d1da6813c1b2$var$fetchingAlldata"],"version":3,"file":"userpage.5c5b3d88.js.map"}